@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap');

$primary: #4299e1;
$font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Lato", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !important;

@import "./node_modules/bootstrap/scss/bootstrap";

.form-control.custom {
    border-color: $gray-300 !important;
    border: 0;
    border-bottom: 2px solid $gray-200;
    border-radius: 0;
}

.form-control.custom:focus {
    box-shadow: none;
    border-bottom-color: $primary !important;
}

.input-group-text {
    background: lighten($primary, 37%);
    color: $primary;
}


.input-group > .form-control.custom:not(:first-child), .input-group > .custom-select:not(:first-child) {
    border-left: 0 !important;
    border-radius: 0;
}

.carousel-indicators li {
    background: $blue;
    height: 0;
    width: 20px;
    border-radius: 100%;
}

.checkbox.custom {
    display: none;
}

.checkbox.custom + .card-body {
    border: 1px solid transparent;
    transition: 0.2s;
}

.checkbox.custom:checked + .card-body {
    border: 1px solid rgba(129, 183, 255, 0.70);
    background: rgba(129, 183, 255, 0.10);
    color: $blue;
}

.dropnone .dropdown-toggle::before, .dropnone .dropdown-toggle::after {
    display: none;
}

.border-gray {
    border-color: $gray-400 !important;
}

/* width */
::-webkit-scrollbar {
    width: 8px;
}

/* Track */
::-webkit-scrollbar-track {
    background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: $gray-400;
    border-radius: $rounded-pill;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: $gray-400;
}

#login-form {
    box-shadow: $box-shadow-sm;
    background: $white;
    z-index: 1;
}

.container-mobile {
    width: 100%;
    margin: 0 auto;
}

@include media-breakpoint-up(lg) {
    .container-mobile {
        width: 50%;
    }
}

.pb-6,
.py-6 {
    padding-bottom: 3.5rem !important;
}

.pb-7,
.py-7 {
    padding-bottom: 4rem !important;
}

.pb-8,
.py-8 {
    padding-bottom: 4.5rem !important;
}

.pb-9,
.py-9 {
    padding-bottom: 5rem !important;
}

.pb-10,
.py-10 {
    padding-bottom: 5.5rem !important;
}

@include media-breakpoint-up(lg) {
    #login-form {
        box-shadow: none;
    }
    #container-login-form {
        background: $white !important;
    }
}

a.menu-item {
    text-decoration: none;
}
.menu-item {
    border-left: 2px solid transparent;
    transition: 0.3s border-left-color;
    padding: .75rem 1.25rem;
    color: $dark;
    border-radius: $border-radius-lg;

    &:hover {
        background: #F6FAFF;
    }
}

.menu-item.active {
    background: #F6FAFF;
    color: #1D65CC;
    border: 1px solid lighten(#1D65CC, 50%);
}

.custom-file-label::after {
    display: none;
}

.chat-person {
    transition: 0.3s;
}

.chat-person:hover {
    background: #F6FAFF;
}

.project__list-item {

}

@mixin badge-variant($bg) {
    color: $bg;
    background-color: rgba($bg, 0.1);
}

@each $color, $value in $theme-colors {
    .badge-#{$color} {
        @include badge-variant($value);
    }
}

.alert {
    border: 0;
}

@each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
        @include button-outline-variant($value);
    }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
    color: $color;
    background: rgba($color, 0.3);
    border-color: rgba($color, 0.1);

    @include hover() {
        color: $color-hover;
        background-color: $active-background;
        border-color: $active-border;
    }

    &:focus,
    &.focus {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
    }

    &.disabled,
    &:disabled {
        color: $color;
        background-color: transparent;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
        color: color-yiq($active-background);
        background-color: $active-background;
        border-color: $active-border;

        &:focus {
            // Avoid using mixin so we can pass custom focus shadow properly
            @if $enable-shadows and $btn-active-box-shadow != none {
                box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
            } @else {
                box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
            }
        }
    }
}

.job-post {
    transition: 0.3s background-color;
}

.job-post:hover {
    background: lighten($primary, 40%);
}

.btn {
    border-radius: 1rem !important;
}
